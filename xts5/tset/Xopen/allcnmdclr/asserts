>># $Header: /cvs/xtest/xtest/xts5/tset/Xopen/allcnmdclr/Attic/asserts,v 1.1 2005-02-12 14:37:43 anderson Exp $
>># 
>># Project: VSW5
>># 
>># File: vsw5/tset/XOPEN/allcnmdclr/asserts
>># 
>># Description:
>># 	Assertions for XAllocNamedColor()
>># 
>># Modifications:
>># $Log: asserts,v $
>># Revision 1.1  2005-02-12 14:37:43  anderson
>># Initial revision
>>#
>># Revision 8.0  1998/12/23 23:36:01  mar
>># Branch point for Release 5.0.2
>>#
>># Revision 7.0  1998/10/30 22:58:48  mar
>># Branch point for Release 5.0.2b1
>>#
>># Revision 6.0  1998/03/02 05:27:14  tbr
>># Branch point for Release 5.0.1
>>#
>># Revision 5.0  1998/01/26 03:23:47  tbr
>># Branch point for Release 5.0.1b1
>>#
>># Revision 4.0  1995/12/15 09:14:57  tbr
>># Branch point for Release 5.0.0
>>#
>># Revision 3.1  1995/12/15  01:18:24  andy
>># Prepare for GA Release
>>#
>># 
>># 
>># 
>># 
>># 
>># 
>>TITLE XAllocNamedColor XOPEN
>>ASSERTION A XAllocNamedColor-1
When a colour name in the table is recognised on a call to
XAllocNamedColor, then all other colour names on the same
line of the table are also recognised on another call to
XAllocNamedColor using the same display and colormap, and
the same values are returned by each call to
XAllocNamedColor in the red, green and blue components of
the XColor structures named by the exact_def_return argument
and screen_def_return arguments.
>>STRATEGY
For each supported visual type:
  Create a colourmap of that type using XCreateColormap.
  For each equivalent colour name:
    Obtain the rgb values for the colour.
    Verify that the exact rgb values are identical.
    Verify that the supported rbg values are identical.
    Free the allocated colourmap cell using XFreeColors.
>>ASSERTION A XAllocNamedColor-2
When a colour name in the table is recognised on a call to
XAllocNamedColor, and a colour name on a different line of
the table is also recognised on another call to
XAllocNamedColor using the same display and colormap, then
distinct values are returned by each call to
XAllocNamedColor in the red, green and blue components of
the XColor structures named by the exact_def_return argument
and screen_def_return arguments.
>>STRATEGY
For each supported visual:
  Create a colourmap of that type using XCreateColormap.
  For each pair of colour names in the table:
    Obtain the rgb values corresponding to the name using XAllocNamedColor.
    Verify that the rgb triples are different.
    Free the allocated colourmap cell using XFreeColors.
>>ASSERTION A XAllocNamedColor-3
When a colour name in the table is recognised on a call to
XAllocNamedColor, then the colour name with the first
letter of each word in upper-case and with no spaces between
words is also recognised on another call to XAllocNamedColor
using the same display and colormap, and the same values
are returned by each call to XAllocNamedColor in the red,
green and blue components of the XColor structures named by
the exact_def_return argument and screen_def_return
arguments.
>>STRATEGY
For each supported visual type:
  Create a colourmap of that type using XCreateColormap.
  For each equivalent colour name:
    Obtain the rgb values for the colour.
    Verify that the exact rgb values are identical.
    Verify that the supported rbg values are identical.
    Free the allocated colourmap cell using XFreeColors.
>>ASSERTION A XAllocNamedColor-4
All colour names in the table which are in set A are
recognised on a call to XAllocNamedColor.
>>STRATEGY
For each supported visual type:
  Create a colourmap of that type using XCreateColormap.
  For the colournames in the table:
    Obtain the rgb values for the colour using XAllocNamedColor.
    Verify that the call did not return 0.
    Free the allocated colourmap cell using XFreeColors.
>>ASSERTION C XAllocNamedColor-5
If any of the visual classes GrayScale or StaticGray
support colourmaps with at least four colour cells: When the
visual type of the colormap argument is GrayScale or
StaticGray, and colormap has at least four colour cells,
then all colour names in the table which are in set M are
recognised on a call to XAllocNamedColor.
>>STRATEGY
If the server supports GrayScale or StaticGray with colourmap size greater than 4:
  For those supported visuals:
    Create a colourmap using XCreateColormap.
    For each colour name in the table:
      Obtain the rgb values for the for the colour using XAllocNamedColor.
      Verify that the call did not return 0.
      Free the allocated colourmap cell using XFreeColors.
>>ASSERTION C XAllocNamedColor-6
If any of the visual classes PseudoColor, StaticColor,
TrueColor, or DirectColor are supported: When the visual
type of the colormap argument is PseudoColor, StaticColor,
TrueColor, or DirectColor, then all colour names in the
table which are in set C are recognised on a call to
XAllocNamedColor.
>>STRATEGY
For each supported visual type from PseudoColor, StaticColor, TrueColor and DirectColor:
  Create a colourmap of that type using XCreateColormap.
  For the colournames in the table:
    Obtain the rgb values for the colour using XAllocNamedColor.
    Verify that the call did not return 0.
    Free the allocated colourmap cell using XFreeColors.
>>ASSERTION A XAllocNamedColor-7
When a colour name in the table which is in set M, V or X
is recognised on a call to XAllocNamedColor, then all other
colour names in the table which are in set C, M, or V are
also recognised on another call to XAllocNamedColor.
>>STRATEGY
If a colourname in sets M, V or X causes XAllocNamedColor to return non-zero:
  For each supported visual:
    Verify that all the colour names in C, M and V also cause XAllocNamedColor to return non-zero:
    Free the allocated colourmap cell using XFreeColors.
